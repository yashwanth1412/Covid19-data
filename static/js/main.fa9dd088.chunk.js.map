{"version":3,"sources":["Table.js","App.js","reportWebVitals.js","index.js"],"names":["Table","props","data","length","map","item","Country","ActiveCases","TotalConfirmed","TotalDeaths","className","App","useState","covid_data","set_data","value","setValue","useEffect","a","fetch","response","json","console","log","fetchMyAPI","search_data","TotalRecovered","filter","toLowerCase","includes","onChange","e","target","placeholder","autoFocus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAEe,SAASA,EAAOC,GAC3B,OACI,gCACI,kCACI,+BACI,2CACA,gDACA,mDACA,mDAEHA,EAAMC,KAAKC,OAASF,EAAMC,KAAKE,KAAI,SAAAC,GAChC,OACI,+BACI,mCAAMA,EAAKC,QAAX,OACA,mCAAMD,EAAKE,YAAX,OACA,mCAAMF,EAAKG,eAAX,OACA,mCAAMH,EAAKI,qBAGlB,oBAAIC,UAAU,MAAd,2ECiCNC,MAjDf,WAEE,MAA+BC,mBAAS,IAAxC,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACuBC,MAAM,sCAD7B,cACMC,EADN,gBAEmBA,EAASC,OAF5B,OAEMnB,EAFN,OAGEoB,QAAQC,IAAIrB,EAAI,UAAc,IAC9BY,EAASZ,EAAI,WAJf,2CADc,yBAAC,WAAD,wBAQdsB,KACC,IAEH,IASMC,EATOZ,EAAWT,KAAI,SAAAC,GAC1B,MAAO,CACL,QAAYA,EAAKC,QACjB,YAAgBD,EAAKG,gBAAkBH,EAAKI,YAAcJ,EAAKqB,gBAC/D,eAAmBrB,EAAKG,eACxB,YAAgBH,EAAKI,gBAIAkB,QAAO,SAACtB,GAAD,OAC5BA,EAAKC,QAAQsB,cAAcC,SAASd,EAAMa,kBAI9C,OACE,sBAAKlB,UAAU,MAAf,UACE,qBAAKA,UAAU,OAAf,SACE,8EAEF,uBACEK,MAAOA,GAAS,GAChBe,SAAU,SAACC,GACTf,EAASe,EAAEC,OAAOjB,QAEpBkB,YAAY,qBACZC,WAAS,IAGX,cAAClC,EAAD,CAAOE,KAAMuB,QCrCJU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa9dd088.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Table (props){\r\n    return (\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <th> Country </th>\r\n                    <th> Active Cases </th>\r\n                    <th> Total Confirmed </th>\r\n                    <th> Total Deaths </th> \r\n                </tr>\r\n                {props.data.length ? props.data.map(item => {\r\n                    return (\r\n                        <tr>\r\n                            <td> {item.Country} </td>\r\n                            <td> {item.ActiveCases} </td>\r\n                            <td> {item.TotalConfirmed} </td>\r\n                            <td> {item.TotalDeaths}</td>\r\n                        </tr>\r\n                    )\r\n                }) : <h2 className='msg'> No country with the given name is found... Try another </h2>}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import './App.css';\nimport React, { useState, useEffect } from 'react'\n\nimport Table from \"./Table\";\n\nfunction App() {\n\n  const [covid_data, set_data] = useState([])\n  const [value, setValue] = useState('');\n\n  useEffect(() => {\n    async function fetchMyAPI() {\n      let response = await fetch('https://api.covid19api.com/summary')\n      let data = await response.json()\n      console.log(data['Countries'][0])\n      set_data(data['Countries'])\n    }\n    \n    fetchMyAPI()\n  }, [])\n\n  const data = covid_data.map(item => {\n    return {\n      'Country' : item.Country,\n      'ActiveCases' : item.TotalConfirmed - (item.TotalDeaths - item.TotalRecovered),\n      'TotalConfirmed' : item.TotalConfirmed,\n      'TotalDeaths' : item.TotalDeaths\n    }\n  })\n\n  const search_data = data.filter((item) =>\n      item.Country.toLowerCase().includes(value.toLowerCase())\n    )\n\n\n  return (\n    <div className=\"App\">\n      <div className='head'>\n        <h1> Covid 19 Statistics of Various Countries </h1>\n      </div>\n      <input\n        value={value || \"\"}\n        onChange={(e) => {\n          setValue(e.target.value);\n        }}\n        placeholder=\"Enter Country Name\"\n        autoFocus\n      />\n      \n      <Table data={search_data} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}